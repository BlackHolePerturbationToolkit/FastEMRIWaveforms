name: Run tests on push

on:
  push:
    branches:
      - Kerr_Equatorial_Eccentric

jobs:
  install_and_run_tests:
    name: Install and run non-GPU tests
    runs-on: ${{ matrix.os }}
    # defaults:
    #   run:
    #     shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-24.04", "ubuntu-22.04", "macos-13", "macos-14", "macos-15"] #, "windows-latest"]
        python-version: ["3.12"] #["3.9", "3.10", "3.11", "3.12"]
        # cuda-version: ["12.4.0"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Install LAPACKE
        uses: ConorMacBride/install-package@v1
        with:
          brew: lapack
          apt: liblapacke-dev

      - name: Export LAPACK pkgconfig path (macOS 13)
        if: ${{ matrix.os == 'macos-13' }}
        run: |
          echo "LAPACK_PKG_CONFIG_PATH=/usr/local/opt/lapack/lib/pkgconfig" >> "$GITHUB_ENV"

      - name: Export LAPACK pkgconfig path (macOS 14 and 15)
        if: ${{ matrix.os == 'macos-14' || matrix.os == 'macos-15' }}
        run: |
          echo "LAPACK_PKG_CONFIG_PATH=/opt/homebrew/opt/lapack/lib/pkgconfig" >> "$GITHUB_ENV"

      - name: Install package
        run: |
          which python
          export PKG_CONFIG_PATH=${LAPACK_PKG_CONFIG_PATH}:${PKG_CONFIG_PATH}
          python --version
          python -m pip install '.[testing]' \
            --config-settings=cmake.define.FEW_WITH_GPU=OFF \
            --config-settings=cmake.define.FEW_LAPACKE_FETCH=OFF \
            --config-settings=cmake.define.FEW_LAPACKE_DETECT_WITH=PKGCONFIG

      - name: Install coverage
        run: |
          python -m pip install coverage

      - name: Run module tests
        run: |
          coverage run --source=few -m unittest discover

      - name: Show coverage results
        run: |
          coverage report -m

      - name: Upload coverage results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ strategy.job-index }}
          path: .coverage
          retention-days: 2

  compute-coverage:
    runs-on: ubuntu-latest
    needs:
      - install_and_run_tests
    steps:
      - name: Install coverage
        run: |
          python -m pip install coverage

      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          path: coverage_results/
          merge-multiple: false

      - name: Merge coverage files
        run: |
          coverage combine coverage_results/*/.coverage

      - name: Export to Cobertura XML
        run: |
          coverage xml

      - name: Summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          output: both
          thresholds: '40 80'
